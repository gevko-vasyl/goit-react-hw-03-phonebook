{"version":3,"sources":["components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["Container","children","className","ContactForm","addContact","useState","name","setName","number","setNumber","onSubmit","e","preventDefault","type","value","pattern","title","required","onChange","target","Filter","onFilterChange","ContactItem","id","onDelete","onClick","ContactList","contacts","map","App","setContacts","filter","setFilter","useEffect","data","JSON","parse","localStorage","getItem","setItem","stringify","preventDuplicateContact","contact","includes","alert","length","contactId","nanoid","normalizedFilter","toLowerCase","getFilteredContacts","newContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8fdf5dd.chunk.js","sourcesContent":["import \"./Container.scss\";\n\nconst Container = ({ children }) => {\n  return (\n    <div className=\"Container\">\n      <h1 className=\"Container__title\">Phonebook</h1>\n      {children}\n    </div>\n  );\n};\n\nexport default Container;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ContactForm.scss\";\n\nexport default function ContactForm({ addContact }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleNameChange = (e) => {\n    const name = e.target.value;\n    setName(name);\n  };\n\n  const handleNumberChange = (e) => {\n    const number = e.target.value;\n    setNumber(number);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addContact(name, number);\n    setName(\"\");\n    setNumber(\"\");\n  };\n  return (\n    <form className=\"Form\" onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleNameChange}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          onChange={handleNumberChange}\n        />\n      </label>\n      <button type=\"submit\" className=\"Form__button\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Filter.scss\";\n\nexport default function Filter({ onFilterChange }) {\n  return (\n    <div className=\"Filter \">\n      <h2 className=\"Filter__contacts-title\">Contacts</h2>\n      <h3 className=\"Filter__title\">Find contacts by name</h3>\n      <input className=\"Filter__input\" type=\"text\" onChange={onFilterChange} />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function ContactItem({ name, number, id, onDelete }) {\n  return (\n    <li className=\"ContactItem\">\n      <p className=\"ContactItem__text\">{name}</p>\n      <p className=\"ContactItem__text\">{number}</p>\n      <button className=\"ContactListItem__button\" onClick={() => onDelete(id)}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactItem from \"components/ContactItem/ContactItem\";\nimport \"./ContactList.scss\";\n\nexport default function ContactList({ contacts, onDelete }) {\n  return (\n    <>\n      <ul className=\"ContactList\">\n        {contacts.map(({ name, number, id }) => (\n          <ContactItem\n            key={id}\n            name={name}\n            number={number}\n            id={id}\n            onDelete={onDelete}\n          />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDelete: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Container from \"components/Container/Container\";\nimport ContactForm from \"components/ContactForm/ContactForm\";\nimport Filter from \"components/Filter/Filter\";\nimport ContactList from \"components/ContactList/ContactList\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(\"contacts\"));\n    data && setContacts(data);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleSubmitForm = (name, number) => {\n    const contactId = nanoid();\n    preventDuplicateContact(name) &&\n      setContacts([...contacts, { name, number, id: contactId }]);\n  };\n\n  const handleDeleteContact = (id) => {\n    const newContacts = contacts.filter((contact) => contact.id !== id);\n    setContacts(newContacts);\n  };\n\n  const handleFilterChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const preventDuplicateContact = (name) => {\n    const filteredContacts = contacts.filter((contact) => {\n      contact.name.includes(name) &&\n        alert(`${name} already exists in contacts`);\n      return contact.name.includes(name);\n    });\n\n    return filteredContacts.length !== 1;\n  };\n\n  return (\n    <Container>\n      <ContactForm addContact={handleSubmitForm} />\n\n      <Filter onFilterChange={handleFilterChange} />\n      <ContactList\n        contacts={getFilteredContacts()}\n        onDelete={handleDeleteContact}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}